"""
Работа со списками (массивами) в Python

Список - это основная структура данных для соревнований.
Нужно знать все операции со списками назубок!
"""

# ============================================
# Создание списков
# ============================================
print("=== Создание списков ===")

# Пустой список
arr1 = []
print(f"Пустой список: {arr1}")

# Список с элементами
arr2 = [1, 2, 3, 4, 5]
print(f"Список с числами: {arr2}")

# Список из n нулей
n = 5
arr3 = [0] * n
print(f"Список из {n} нулей: {arr3}")

# Список из n элементов (одинаковых)
arr4 = [10] * 3
print(f"Три десятки: {arr4}")

# Списковое включение (list comprehension)
arr5 = [i for i in range(10)]
print(f"Числа от 0 до 9: {arr5}")

# Квадраты чисел
arr6 = [i**2 for i in range(5)]
print(f"Квадраты: {arr6}")

# Только четные числа
arr7 = [i for i in range(20) if i % 2 == 0]
print(f"Четные от 0 до 19: {arr7}")

# ============================================
# Доступ к элементам
# ============================================
print("\n=== Доступ к элементам ===")
arr = [10, 20, 30, 40, 50]

print(f"Массив: {arr}")
print(f"Первый элемент (индекс 0): {arr[0]}")
print(f"Третий элемент (индекс 2): {arr[2]}")
print(f"Последний элемент: {arr[-1]}")
print(f"Предпоследний элемент: {arr[-2]}")

# Изменение элемента
arr[0] = 100
print(f"После изменения первого: {arr}")

# ============================================
# Срезы (slicing)
# ============================================
print("\n=== Срезы ===")
arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

print(f"Массив: {arr}")
print(f"С 2 по 5 индекс (не включая 5): {arr[2:5]}")  # [2, 3, 4]
print(f"Первые 3 элемента: {arr[:3]}")  # [0, 1, 2]
print(f"С 5-го до конца: {arr[5:]}")  # [5, 6, 7, 8, 9]
print(f"Последние 3 элемента: {arr[-3:]}")  # [7, 8, 9]
print(f"Развернуть массив: {arr[::-1]}")  # [9, 8, 7, ..., 0]
print(f"Каждый второй элемент: {arr[::2]}")  # [0, 2, 4, 6, 8]

# ============================================
# Добавление и удаление элементов
# ============================================
print("\n=== Добавление и удаление ===")
arr = [1, 2, 3]
print(f"Начальный массив: {arr}")

# Добавить в конец (быстро, O(1))
arr.append(4)
print(f"После append(4): {arr}")

# Добавить в начало (медленно, O(n))
arr.insert(0, 0)
print(f"После insert(0, 0): {arr}")

# Добавить на позицию
arr.insert(2, 1.5)
print(f"После insert(2, 1.5): {arr}")

# Удалить последний элемент (быстро, O(1))
last = arr.pop()
print(f"Удалили последний ({last}): {arr}")

# Удалить первый элемент (медленно, O(n))
first = arr.pop(0)
print(f"Удалили первый ({first}): {arr}")

# Удалить элемент по значению
arr.remove(1.5)
print(f"Удалили 1.5: {arr}")

# ============================================
# Полезные операции
# ============================================
print("\n=== Полезные операции ===")
arr = [3, 1, 4, 1, 5, 9, 2, 6]

print(f"Массив: {arr}")
print(f"Длина: {len(arr)}")
print(f"Сумма: {sum(arr)}")
print(f"Минимум: {min(arr)}")
print(f"Максимум: {max(arr)}")
print(f"Индекс первого вхождения 1: {arr.index(1)}")
print(f"Сколько раз встречается 1: {arr.count(1)}")

# Сортировка
sorted_arr = sorted(arr)  # создает новый список
print(f"Отсортированный (новый): {sorted_arr}")
print(f"Исходный не изменился: {arr}")

arr.sort()  # сортирует на месте
print(f"Отсортированный (на месте): {arr}")

# Сортировка по убыванию
arr.sort(reverse=True)
print(f"По убыванию: {arr}")

# Развернуть массив
arr.reverse()
print(f"Развернутый: {arr}")

# ============================================
# Двумерные массивы (матрицы)
# ============================================
print("\n=== Двумерные массивы ===")

# ПРАВИЛЬНЫЙ способ создания матрицы n x m
n, m = 3, 4
matrix = [[0] * m for _ in range(n)]
print("Матрица 3x4:")
for row in matrix:
    print(row)

# Изменим один элемент
matrix[0][0] = 1
matrix[1][2] = 5
print("\nПосле изменений:")
for row in matrix:
    print(row)

# НЕПРАВИЛЬНЫЙ способ (НЕ ДЕЛАЙТЕ ТАК!)
# wrong_matrix = [[0] * m] * n  # ВСЕ строки - это ОДНА И ТА ЖЕ строка!

# Чтение матрицы
print("\nЧтение матрицы из ввода:")
print("""
n, m = map(int, input().split())  # размеры
matrix = []
for i in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

# Или короче:
matrix = [list(map(int, input().split())) for _ in range(n)]
""")

# ============================================
# Задачи для практики
# ============================================
print("\n=== Задачи для практики ===")

# Задача 1: Найти второй максимум
def find_second_max(arr):
    """Найти второй по величине элемент"""
    # Способ 1: сортировка
    sorted_arr = sorted(arr, reverse=True)
    return sorted_arr[1]

    # Способ 2: за один проход (эффективнее!)
    # first_max = second_max = float('-inf')
    # for num in arr:
    #     if num > first_max:
    #         second_max = first_max
    #         first_max = num
    #     elif num > second_max and num != first_max:
    #         second_max = num
    # return second_max

arr = [10, 5, 20, 15, 30, 25]
print(f"Массив: {arr}")
print(f"Второй максимум: {find_second_max(arr)}")

# Задача 2: Подсчитать четные и нечетные числа
def count_even_odd(arr):
    """Подсчитать четные и нечетные"""
    even_count = sum(1 for x in arr if x % 2 == 0)
    odd_count = len(arr) - even_count
    return even_count, odd_count

arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
even, odd = count_even_odd(arr)
print(f"\nМассив: {arr}")
print(f"Четных: {even}, Нечетных: {odd}")

# Задача 3: Развернуть массив без встроенных функций
def reverse_array(arr):
    """Развернуть массив вручную"""
    left, right = 0, len(arr) - 1
    while left < right:
        # Меняем местами
        arr[left], arr[right] = arr[right], arr[left]
        left += 1
        right -= 1
    return arr

arr = [1, 2, 3, 4, 5]
print(f"\nДо разворота: {arr}")
reverse_array(arr)
print(f"После разворота: {arr}")

# Задача 4: Сдвиг массива влево на k позиций
def rotate_left(arr, k):
    """Сдвинуть массив влево на k позиций"""
    n = len(arr)
    k = k % n  # на случай если k > n
    return arr[k:] + arr[:k]

arr = [1, 2, 3, 4, 5]
k = 2
print(f"\nДо сдвига: {arr}")
print(f"После сдвига на {k} влево: {rotate_left(arr, k)}")

print("\n=== Конец примеров ===")
